-- Combined Script: Fires a ProximityPrompt and interacts with a GUI

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Handle character respawning
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
end)

-- Function to teleport to the breach, fire its prompt, then interact with GUI
local function teleportAndFirePrompt(part)
    if not part:FindFirstChild("Breach") then return false end
    if not part.Breach:FindFirstChild("ProximityPrompt") then return false end
    
    local prompt = part.Breach.ProximityPrompt
    local humanoid = character:FindFirstChild("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not hrp then
        print("Character not fully loaded yet")
        return false
    end

    -- Teleport above the breach
    local teleportPosition = part.Position + Vector3.new(0, 3, 0)
    print("Teleporting to Breach in part: " .. part.Name)
    hrp.CFrame = CFrame.new(teleportPosition)
    
    -- Wait for ProximityPrompt to be usable
    task.wait(0.5)
    
    print("Firing ProximityPrompt...")
    fireproximityprompt(prompt)
    print("ProximityPrompt fired successfully!")

    -- Begin GUI selection logic (formerly the first script)
    local success, err = pcall(function()
        local breach = player:WaitForChild("PlayerGui"):WaitForChild("Breach")
        local container = breach:WaitForChild("Frame"):GetChildren()[14]
        local innerFrame = container:WaitForChild("Frame"):WaitForChild("Frame")
        local targetButton = innerFrame:GetChildren()[2]:GetChildren()[5].Frame:FindFirstChild("TextButton")

        if targetButton and targetButton:IsA("TextButton") then
            GuiService.SelectedObject = targetButton
            print("Selected target button:", targetButton.Name)

            -- Simulate pressing Enter
            task.delay(1, function()
                local vim = game:GetService("VirtualInputManager")
                vim:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                vim:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
            end)
        else
            warn("Target button not found or not a TextButton")
        end
    end)

    if not success then
        warn("Error accessing GUI:", err)
    end

    return true
end

-- Monitor loop for breaches
local function monitorBreaches()
    print("Breach monitor starting...")

    if not workspace:FindFirstChild("Lobby") then
        print("Waiting for Lobby to load...")
        repeat task.wait(1) until workspace:FindFirstChild("Lobby")
    end

    if not workspace.Lobby:FindFirstChild("Breaches") then
        print("Waiting for Breaches folder to load...")
        repeat task.wait(1) until workspace.Lobby:FindFirstChild("Breaches")
    end

    local breachesFolder = workspace.Lobby.Breaches
    print("Breaches folder found! Monitoring for Breach spawns...")

    while true do
        for _, part in pairs(breachesFolder:GetChildren()) do
            if part:IsA("BasePart") and part:FindFirstChild("Breach") then
                local success = teleportAndFirePrompt(part)
                if success then
                    print("Breach interaction complete! Waiting before next check...")
                    task.wait(10)
                end
            end
        end
        task.wait(1)
    end
end

-- Start the breach monitor
spawn(function()
    if not player.Character then
        character = player.CharacterAdded:Wait()
        task.wait(5)
    end
    monitorBreaches()
end)

print("Combined breach monitor + GUI interaction initialized.")
